Cleaning binaries
-----------------
Cleaning 'binaries' order=[dynlib staticlib nobin prog prog2]
Cleaning 'dynamic' order=[dynamic dynlib_tester]
Cleaning 'dyn_tester'
Cleaning 'static'
Cleaning 'nobin'
Cleaning 'prog' order=[__pre_build prog __post_build]
Cleaning 'prog2' order=[prog2_dynlib prog2]
Cleaning 'prog2_dynlib'

Building binaries
-----------------
Building 'binaries' order=[dynlib staticlib nobin prog prog2]
Building 'dynamic' order=[dynamic dynlib_tester]
Building 'dyn_tester'
Building 'static'
Building 'nobin'
Building 'prog' order=[__pre_build prog __post_build]
Building 'prog2' order=[prog2_dynlib prog2]
Building 'prog2_dynlib'

Checking binaries output
------------------------
sbs-test [main:9]: Starting prog
sbs-test [main:10]: Calling dynlib_func0
sbs-test [dynlib_func0:5]: DYNLIB_DEF=10 PROJECT_DEF=1
sbs-test [main:11]: Calling staticlib_func0
sbs-test [staticlib_func0:5]: 
sbs-test [main:12]: Calling staticlib_additional_func0
sbs-test [staticlib_additional_func0:6]: 
sbs-test [main:13]: Ending prog

sbs-test [main:8]: Starting dyn_tester
sbs-test [main:9]: Calling dynlib_func0
sbs-test [dynlib_func0:5]: DYNLIB_DEF=10 PROJECT_DEF=1
sbs-test [main:10]: Ending dyn_tester

sbs-test [main:21]: Starting prog2
sbs-test [main:22]: log(16)=2
sbs-test [main:23]: Calling prog2_dynlib_func0
sbs-test [prog2_dynlib_func0:5]: 
sbs-test [main:24]: Ending prog2

